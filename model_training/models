{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/jwiggerthale/HiL-Machine-Learnig/blob/main/model_training/models\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "o9uAePjNKc0y"
      },
      "outputs": [],
      "source": [
        "import tensorflow as tf\n",
        "from tensorflow import keras\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import glob\n",
        "import random\n",
        "from matplotlib.patches import Rectangle\n",
        "from lxml import etree\n",
        "\n",
        "# Enable Matplotlib backend for displaying static images\n",
        "%matplotlib inline"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fOYgsG1vgBDt",
        "outputId": "c7753ea8-1266-4f63-ce67-ee4814828a22"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Path to dataset files: /kaggle/input/defects-class-and-location\n"
          ]
        }
      ],
      "source": [
        "import kagglehub\n",
        "\n",
        "# Download latest version\n",
        "path = kagglehub.dataset_download(\"zhangyunsheng/defects-class-and-location\")\n",
        "\n",
        "print(\"Path to dataset files:\", path)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "47PPz9v5Khnc",
        "outputId": "1d030259-77e1-4747-b294-238bf9c2d77f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['inclusion',\n",
              " 'waist folding',\n",
              " 'rolled_pit',\n",
              " 'oil_spot',\n",
              " 'crescent_gap',\n",
              " 'crease',\n",
              " 'water_spot',\n",
              " 'punching_hole',\n",
              " 'silk_spot',\n",
              " 'welding_line']"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ],
      "source": [
        "import os\n",
        "os.listdir(\"/kaggle/input/defects-class-and-location/images/images\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DQwyoCBEKicw",
        "outputId": "aa24f2f8-d519-40b2-9c89-08a74af5f1dc"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['img_01_425241700_00384.xml',\n",
              " 'img_06_425505000_00050.xml',\n",
              " 'img_06_3436814300_00056.xml',\n",
              " 'img_07_425390900_00077.xml',\n",
              " 'img_01_425005700_00501.xml',\n",
              " 'img_07_4406743300_00036.xml',\n",
              " 'img_08_436164500_01565.xml',\n",
              " 'img_02_425501900_00018.xml',\n",
              " 'img_01_425503500_00017.xml',\n",
              " 'img_03_3403331900_01545.xml',\n",
              " 'img_05_436164700_01553.xml',\n",
              " 'img_08_424826800_00002.xml',\n",
              " 'img_07_3436814000_00691.xml',\n",
              " 'img_03_436164700_00257.xml',\n",
              " 'img_07_425507200_00974.xml',\n",
              " 'img_08_4402851700_00985.xml',\n",
              " 'img_03_425501800_01214.xml',\n",
              " 'img_02_436153600_00700.xml',\n",
              " 'img_02_3436813700_00274.xml',\n",
              " 'img_03_436184600_00786.xml',\n",
              " 'img_03_425620300_00001.xml',\n",
              " 'img_01_425005700_00181.xml',\n",
              " 'img_03_425503000_00017.xml',\n",
              " 'img_07_4405133600_00042.xml',\n",
              " 'img_05_4406743300_00482.xml',\n",
              " 'img_07_3436786500_00002.xml',\n",
              " 'img_03_425644600_00004.xml',\n",
              " 'img_08_3437011100_00686.xml',\n",
              " 'img_02_4406446600_00072.xml',\n",
              " 'img_08_424799300_01132.xml',\n",
              " 'img_03_425640100_00875.xml',\n",
              " 'img_07_3436814000_00694.xml',\n",
              " 'img_07_4406645900_00341.xml',\n",
              " 'img_06_425502300_01437.xml',\n",
              " 'img_04_4405001100_00859.xml',\n",
              " 'img_01_425005700_00467.xml',\n",
              " 'img_06_425613800_00787.xml',\n",
              " 'img_02_425507400_00018.xml',\n",
              " 'img_02_425507200_01509.xml',\n",
              " 'img_03_436150100_00001.xml',\n",
              " 'img_08_4406743300_00424.xml',\n",
              " 'img_06_4402541100_00001.xml',\n",
              " 'img_01_4406743300_00837.xml',\n",
              " 'img_06_4406645900_00481.xml',\n",
              " 'img_06_3403404000_00927.xml',\n",
              " 'img_03_425389800_00017.xml',\n",
              " 'img_08_425506100_01068.xml',\n",
              " 'img_01_425241500_00995.xml',\n",
              " 'img_03_3402617100_00131.xml',\n",
              " 'img_08_4406743300_00432.xml',\n",
              " 'img_03_425507000_00876.xml',\n",
              " 'img_08_425506600_00952.xml',\n",
              " 'img_01_425008000_00104.xml',\n",
              " 'img_01_424799600_00002.xml',\n",
              " 'img_07_4404893900_00568.xml',\n",
              " 'img_04_4406743300_00001.xml',\n",
              " 'img_03_SIS001540_00785.xml',\n",
              " 'img_08_425613500_00596.xml',\n",
              " 'img_08_4406743300_00409.xml',\n",
              " 'img_03_SIS001540_00809.xml',\n",
              " 'img_07_436164700_01536.xml',\n",
              " 'img_04_425243200_00125.xml',\n",
              " 'img_07_4406743300_00038.xml',\n",
              " 'img_03_425639900_00615.xml',\n",
              " 'img_04_424799300_01133.xml',\n",
              " 'img_07_424826800_00497.xml',\n",
              " 'img_02_SIS001491_00267.xml',\n",
              " 'img_04_425609500_00001.xml',\n",
              " 'img_01_425506400_00018.xml',\n",
              " 'img_01_425614400_00001.xml',\n",
              " 'img_08_425502700_00052.xml',\n",
              " 'img_06_3436814000_00693.xml',\n",
              " 'img_07_3403337700_00899.xml',\n",
              " 'img_07_4405133600_00039.xml',\n",
              " 'img_02_425243400_00057.xml',\n",
              " 'img_08_425503100_00053.xml',\n",
              " 'img_03_425502900_00017.xml',\n",
              " 'img_06_425508600_00938.xml',\n",
              " 'img_04_SIS001577_00046.xml',\n",
              " 'img_05_424799400_01079.xml',\n",
              " 'img_02_4406645900_00310.xml',\n",
              " 'img_08_4402304700_01005.xml',\n",
              " 'img_08_425503800_00052.xml',\n",
              " 'img_04_425637900_00001.xml',\n",
              " 'img_01_424799600_00001.xml',\n",
              " 'img_06_3436814000_00686.xml',\n",
              " 'img_04_425382400_00001.xml',\n",
              " 'img_01_425005700_00304.xml',\n",
              " 'img_04_424826800_00003.xml',\n",
              " 'img_01_425005700_00277.xml',\n",
              " 'img_02_425507000_00931.xml',\n",
              " 'img_02_425637700_00001.xml',\n",
              " 'img_05_4406743300_00419.xml',\n",
              " 'img_04_425237600_00408.xml',\n",
              " 'img_06_425614700_00001.xml',\n",
              " 'img_05_4406743300_00461.xml',\n",
              " 'img_06_4405133600_00034.xml',\n",
              " 'img_06_4402625300_00109.xml',\n",
              " 'img_07_4404710300_00877.xml',\n",
              " 'img_02_3436813700_00270.xml',\n",
              " 'img_07_425390900_00087.xml',\n",
              " 'img_06_425507200_00974.xml',\n",
              " 'img_06_425637500_00002.xml',\n",
              " 'img_07_3437006500_00761.xml',\n",
              " 'img_03_424992300_00216.xml',\n",
              " 'img_06_425507600_00053.xml',\n",
              " 'img_06_4406645900_00451.xml',\n",
              " 'img_04_425243200_00566.xml',\n",
              " 'img_05_425243500_00953.xml',\n",
              " 'img_07_3436814000_00006.xml',\n",
              " 'img_08_4406743300_00378.xml',\n",
              " 'img_03_436152900_00522.xml',\n",
              " 'img_05_4406743300_00400.xml',\n",
              " 'img_03_3402617700_01009.xml',\n",
              " 'img_03_436164300_00327.xml',\n",
              " 'img_02_436183700_00098.xml',\n",
              " 'img_01_425006400_00001.xml',\n",
              " 'img_06_424826800_00494.xml',\n",
              " 'img_06_430103100_01149.xml',\n",
              " 'img_06_4406743300_00082.xml',\n",
              " 'img_02_436153600_00698.xml',\n",
              " 'img_08_425637800_00890.xml',\n",
              " 'img_06_4406645900_00498.xml',\n",
              " 'img_02_425507200_01503.xml',\n",
              " 'img_03_4402329000_00001.xml',\n",
              " 'img_04_425237800_01032.xml',\n",
              " 'img_01_425241400_00053.xml',\n",
              " 'img_02_425243200_00561.xml',\n",
              " 'img_07_3436814000_00679.xml',\n",
              " 'img_02_436153600_00681.xml',\n",
              " 'img_01_425005700_00310.xml',\n",
              " 'img_05_425503400_00052.xml',\n",
              " 'img_07_436163600_00085.xml',\n",
              " 'img_08_425006600_00930.xml',\n",
              " 'img_07_4402719500_00001.xml',\n",
              " 'img_01_425005700_00343.xml',\n",
              " 'img_01_425622400_00001.xml',\n",
              " 'img_07_435974600_00227.xml',\n",
              " 'img_06_4405377100_00032.xml',\n",
              " 'img_05_4406743300_00458.xml',\n",
              " 'img_08_4406743300_00433.xml',\n",
              " 'img_03_4406645900_00364.xml',\n",
              " 'img_03_SIS001559_00006.xml',\n",
              " 'img_08_425506100_00159.xml',\n",
              " 'img_02_436153600_00697.xml',\n",
              " 'img_05_4406743300_00448.xml',\n",
              " 'img_06_4406743300_00036.xml',\n",
              " 'img_06_4404374100_01350.xml',\n",
              " 'img_04_SIS001577_00012.xml',\n",
              " 'img_06_425502600_00052.xml',\n",
              " 'img_03_425506400_00018.xml',\n",
              " 'img_07_425503000_00062.xml',\n",
              " 'img_02_436164300_00844.xml',\n",
              " 'img_03_425613500_00597.xml',\n",
              " 'img_07_425390700_00052.xml',\n",
              " 'img_08_425391700_00188.xml',\n",
              " 'img_05_4406645900_00591.xml',\n",
              " 'img_07_3403406000_00825.xml',\n",
              " 'img_01_425005700_00313.xml',\n",
              " 'img_01_425243300_00467.xml',\n",
              " 'img_06_3402617400_01102.xml',\n",
              " 'img_08_425506100_00400.xml',\n",
              " 'img_06_3436639700_00756.xml',\n",
              " 'img_08_425008000_00823.xml',\n",
              " 'img_06_425505100_00052.xml',\n",
              " 'img_05_425505500_00053.xml',\n",
              " 'img_02_436153600_00686.xml',\n",
              " 'img_07_425613700_00782.xml',\n",
              " 'img_07_3403405800_00821.xml',\n",
              " 'img_06_4406645900_00492.xml',\n",
              " 'img_05_425502300_00026.xml',\n",
              " 'img_06_3403404000_00928.xml',\n",
              " 'img_07_4406743300_00040.xml',\n",
              " 'img_03_425644600_00003.xml',\n",
              " 'img_07_425503100_00007.xml',\n",
              " 'img_05_425244300_00741.xml',\n",
              " 'img_07_3403404500_01254.xml',\n",
              " 'img_08_4406743300_00405.xml',\n",
              " 'img_01_425006800_00261.xml',\n",
              " 'img_02_424799200_00178.xml',\n",
              " 'img_08_3436815300_00019.xml',\n",
              " 'img_07_3403405500_00670.xml',\n",
              " 'img_06_436166500_01098.xml',\n",
              " 'img_02_3436816100_00153.xml',\n",
              " 'img_07_4406743300_00132.xml',\n",
              " 'img_04_425503000_00017.xml',\n",
              " 'img_07_3403335800_00900.xml',\n",
              " 'img_05_4406743300_00568.xml',\n",
              " 'img_06_4406743300_00045.xml',\n",
              " 'img_02_4403465900_00043.xml',\n",
              " 'img_01_425008000_00037.xml',\n",
              " 'img_01_425005700_00158.xml',\n",
              " 'img_01_425005700_00497.xml',\n",
              " 'img_02_4403466600_00014.xml',\n",
              " 'img_02_3402617700_01009.xml',\n",
              " 'img_03_424992500_00437.xml',\n",
              " 'img_04_4406743300_00277.xml',\n",
              " 'img_02_4402329000_00001.xml',\n",
              " 'img_07_4406645900_00559.xml',\n",
              " 'img_06_3403399700_00746.xml',\n",
              " 'img_01_425616200_00001.xml',\n",
              " 'img_03_4403715000_00003.xml',\n",
              " 'img_03_436184600_00782.xml',\n",
              " 'img_06_425508700_00053.xml',\n",
              " 'img_03_425505400_01021.xml',\n",
              " 'img_03_3403406000_00825.xml',\n",
              " 'img_07_435974600_00218.xml',\n",
              " 'img_04_425380900_00001.xml',\n",
              " 'img_02_424799300_00072.xml',\n",
              " 'img_05_4406743300_00427.xml',\n",
              " 'img_07_4405381400_00779.xml',\n",
              " 'img_02_436153600_00688.xml',\n",
              " 'img_02_425508400_00140.xml',\n",
              " 'img_08_425391700_00184.xml',\n",
              " 'img_02_3437009400_00001.xml',\n",
              " 'img_07_3403338900_00683.xml',\n",
              " 'img_01_425005700_00500.xml',\n",
              " 'img_01_425005700_00212.xml',\n",
              " 'img_06_425237000_00662.xml',\n",
              " 'img_02_SIS001577_00067.xml',\n",
              " 'img_04_425503200_00019.xml',\n",
              " 'img_06_4406743300_00023.xml',\n",
              " 'img_01_SIS001577_00020.xml',\n",
              " 'img_06_425508300_00928.xml',\n",
              " 'img_06_425614600_00415.xml',\n",
              " 'img_06_4406743300_00066.xml',\n",
              " 'img_07_4405376700_00809.xml',\n",
              " 'img_02_425389800_00017.xml',\n",
              " 'img_04_425243200_00438.xml',\n",
              " 'img_06_3403331800_01590.xml',\n",
              " 'img_03_3402616100_00002.xml',\n",
              " 'img_07_427199900_01135.xml',\n",
              " 'img_05_425608200_00006.xml',\n",
              " 'img_07_4406743300_00045.xml',\n",
              " 'img_03_SIS001540_00786.xml',\n",
              " 'img_03_4405964400_00010.xml',\n",
              " 'img_08_425508700_00666.xml',\n",
              " 'img_08_4405229800_01204.xml',\n",
              " 'img_01_425005700_00159.xml',\n",
              " 'img_05_425243500_00895.xml',\n",
              " 'img_03_436184600_00793.xml',\n",
              " 'img_04_425391600_00018.xml',\n",
              " 'img_04_436068100_00077.xml',\n",
              " 'img_05_4406743300_00570.xml',\n",
              " 'img_02_425507000_00900.xml',\n",
              " 'img_04_4406645900_00678.xml',\n",
              " 'img_04_425003700_00002.xml',\n",
              " 'img_05_4402842500_01044.xml',\n",
              " 'img_02_425637800_00891.xml',\n",
              " 'img_04_424826100_00528.xml',\n",
              " 'img_01_425005700_00503.xml',\n",
              " 'img_02_424799200_00250.xml',\n",
              " 'img_02_432220200_00001.xml',\n",
              " 'img_03_436165200_00707.xml',\n",
              " 'img_05_4406743300_00436.xml',\n",
              " 'img_05_425391800_00054.xml',\n",
              " 'img_04_4406743300_00004.xml',\n",
              " 'img_01_425391600_00018.xml',\n",
              " 'img_05_425616200_00711.xml',\n",
              " 'img_04_4402622500_00373.xml',\n",
              " 'img_07_3436814000_00680.xml',\n",
              " 'img_03_425638500_00716.xml',\n",
              " 'img_02_SIS001522_00031.xml',\n",
              " 'img_06_424826800_00505.xml',\n",
              " 'img_02_SIS001533_00164.xml',\n",
              " 'img_08_4406743300_00468.xml',\n",
              " 'img_03_436184600_00779.xml',\n",
              " 'img_08_436068100_00004.xml',\n",
              " 'img_01_425005700_00403.xml',\n",
              " 'img_05_4405228100_00452.xml',\n",
              " 'img_03_3403393700_00942.xml',\n",
              " 'img_06_425637900_00899.xml',\n",
              " 'img_05_4406645900_00585.xml',\n",
              " 'img_06_425506300_00054.xml',\n",
              " 'img_03_4406645900_00298.xml',\n",
              " 'img_05_4406743300_00519.xml',\n",
              " 'img_02_425507000_00888.xml',\n",
              " 'img_01_425506600_00018.xml',\n",
              " 'img_04_4402116700_00002.xml',\n",
              " 'img_07_4406645900_00560.xml',\n",
              " 'img_01_4406743300_00649.xml',\n",
              " 'img_06_425507200_00976.xml',\n",
              " 'img_07_4405133600_00044.xml',\n",
              " 'img_07_435974600_00215.xml',\n",
              " 'img_01_425005700_00192.xml',\n",
              " 'img_03_436150300_00388.xml',\n",
              " 'img_03_3402617200_00001.xml',\n",
              " 'img_04_431855000_00121.xml',\n",
              " 'img_08_4406743300_00384.xml',\n",
              " 'img_06_425390700_00051.xml',\n",
              " 'img_03_3403393800_01156.xml',\n",
              " 'img_05_425622400_00001.xml',\n",
              " 'img_02_425383400_00358.xml',\n",
              " 'img_05_4406645900_00040.xml',\n",
              " 'img_07_3403334600_00682.xml',\n",
              " 'img_01_425007600_00674.xml',\n",
              " 'img_08_425508200_00361.xml',\n",
              " 'img_04_425508600_00017.xml',\n",
              " 'img_07_3436814000_00692.xml',\n",
              " 'img_06_3403403800_00911.xml',\n",
              " 'img_07_425390900_00111.xml',\n",
              " 'img_07_425508700_01012.xml',\n",
              " 'img_03_4404374300_00045.xml',\n",
              " 'img_07_4406645900_00753.xml',\n",
              " 'img_06_3403405900_00856.xml',\n",
              " 'img_03_SIS001540_00772.xml',\n",
              " 'img_04_4402818600_00001.xml',\n",
              " 'img_01_425006600_00599.xml',\n",
              " 'img_02_4404612700_00054.xml',\n",
              " 'img_05_4406743300_00555.xml',\n",
              " 'img_06_3403394100_01318.xml',\n",
              " 'img_04_425508100_00018.xml',\n",
              " 'img_02_4403465900_00026.xml',\n",
              " 'img_08_4406743300_00481.xml',\n",
              " 'img_03_424992300_00279.xml',\n",
              " 'img_05_425503600_00053.xml',\n",
              " 'img_01_4406743300_00021.xml',\n",
              " 'img_02_SIS001564_01335.xml',\n",
              " 'img_08_425502200_00054.xml',\n",
              " 'img_03_425640000_00634.xml',\n",
              " 'img_02_425644200_00602.xml',\n",
              " 'img_05_436068100_00002.xml',\n",
              " 'img_08_425503300_00053.xml',\n",
              " 'img_03_425622400_00001.xml',\n",
              " 'img_02_3436813700_00265.xml',\n",
              " 'img_07_4406645900_00741.xml',\n",
              " 'img_03_4406742300_00001.xml',\n",
              " 'img_07_425390900_00062.xml',\n",
              " 'img_01_425006600_00499.xml',\n",
              " 'img_07_4406645900_00152.xml',\n",
              " 'img_07_4406645900_00620.xml',\n",
              " 'img_03_425503800_00017.xml',\n",
              " 'img_03_3403401800_00672.xml',\n",
              " 'img_04_4402622500_00378.xml',\n",
              " 'img_01_SIS001577_00032.xml',\n",
              " 'img_06_424826800_00497.xml',\n",
              " 'img_02_3436813700_00276.xml',\n",
              " 'img_01_4406743300_00223.xml',\n",
              " 'img_07_424799400_01080.xml',\n",
              " 'img_06_3403393200_01334.xml',\n",
              " 'img_06_425637800_00890.xml',\n",
              " 'img_07_3403406200_01076.xml',\n",
              " 'img_04_425508400_00018.xml',\n",
              " 'img_02_425616500_00001.xml',\n",
              " 'img_04_425637700_00842.xml',\n",
              " 'img_01_424825700_00001.xml',\n",
              " 'img_03_425501800_01106.xml',\n",
              " 'img_02_436153600_00692.xml',\n",
              " 'img_05_4406743300_00487.xml',\n",
              " 'img_02_436164300_01201.xml',\n",
              " 'img_03_3403396800_01005.xml',\n",
              " 'img_08_425391700_00191.xml',\n",
              " 'img_02_4402116700_00002.xml',\n",
              " 'img_02_3402617500_00787.xml',\n",
              " 'img_03_436150300_00373.xml',\n",
              " 'img_02_425243200_00563.xml',\n",
              " 'img_05_4406645900_00121.xml',\n",
              " 'img_03_4403465900_00023.xml',\n",
              " 'img_01_425005700_00440.xml',\n",
              " 'img_06_3436814000_00011.xml',\n",
              " 'img_03_425391100_00017.xml',\n",
              " 'img_08_3436783900_01352.xml',\n",
              " 'img_08_4403744200_01172.xml',\n",
              " 'img_05_4406743300_00913.xml',\n",
              " 'img_01_425008500_00819.xml',\n",
              " 'img_02_425508300_00017.xml',\n",
              " 'img_02_SIS001522_00568.xml',\n",
              " 'img_04_425503600_00019.xml',\n",
              " 'img_03_425505400_01033.xml',\n",
              " 'img_01_4406743300_00650.xml',\n",
              " 'img_06_425614600_00424.xml',\n",
              " 'img_03_3402617700_00386.xml',\n",
              " 'img_07_4406645900_00603.xml',\n",
              " 'img_06_3437011100_01183.xml',\n",
              " 'img_08_4406424900_00001.xml',\n",
              " 'img_02_4404580000_00068.xml',\n",
              " 'img_02_4403466100_00004.xml',\n",
              " 'img_04_425622400_00001.xml',\n",
              " 'img_03_424992500_00609.xml',\n",
              " 'img_03_424992300_00520.xml',\n",
              " 'img_07_436164700_01545.xml',\n",
              " 'img_04_425613500_00311.xml',\n",
              " 'img_07_3403335200_00806.xml',\n",
              " 'img_02_425237600_00302.xml',\n",
              " 'img_08_4406743300_00399.xml',\n",
              " 'img_07_424826800_00492.xml',\n",
              " 'img_04_436163100_00009.xml',\n",
              " 'img_01_425391700_00025.xml',\n",
              " 'img_08_425505500_00053.xml',\n",
              " 'img_01_4406772100_00602.xml',\n",
              " 'img_07_425390900_00113.xml',\n",
              " 'img_08_425506100_01051.xml',\n",
              " 'img_01_425005700_00195.xml',\n",
              " 'img_05_4406743300_00001.xml',\n",
              " 'img_05_3403334300_00854.xml',\n",
              " 'img_01_425005700_00189.xml',\n",
              " 'img_05_4406743300_00535.xml',\n",
              " 'img_01_425008500_00410.xml',\n",
              " 'img_03_436150300_00326.xml',\n",
              " 'img_03_4402724500_01245.xml',\n",
              " 'img_07_435974600_00211.xml',\n",
              " 'img_01_425008500_00104.xml',\n",
              " 'img_02_4406783500_00009.xml',\n",
              " 'img_03_4406645900_00001.xml',\n",
              " 'img_08_425506100_00260.xml',\n",
              " 'img_07_4405133600_00046.xml',\n",
              " 'img_03_SIS001540_00775.xml',\n",
              " 'img_01_425005700_00442.xml',\n",
              " 'img_07_425008500_00312.xml',\n",
              " 'img_04_425382600_00050.xml',\n",
              " 'img_08_425508100_01624.xml',\n",
              " 'img_07_4406645900_00570.xml',\n",
              " 'img_03_424992500_01054.xml',\n",
              " 'img_06_4406772100_00002.xml',\n",
              " 'img_02_4406772100_00695.xml',\n",
              " 'img_07_424826800_00507.xml',\n",
              " 'img_06_436164500_01565.xml',\n",
              " 'img_01_425005700_00419.xml',\n",
              " 'img_03_4401440300_00347.xml',\n",
              " 'img_07_3403405400_00930.xml',\n",
              " 'img_02_425506400_00018.xml',\n",
              " 'img_07_425507000_00965.xml',\n",
              " 'img_03_3402617400_00869.xml',\n",
              " 'img_02_425508600_00684.xml',\n",
              " 'img_06_425237000_00773.xml',\n",
              " 'img_01_425503500_00018.xml',\n",
              " 'img_06_4404997500_01006.xml',\n",
              " 'img_07_425508300_00926.xml',\n",
              " 'img_06_SIS002344_00834.xml',\n",
              " 'img_03_436184600_00002.xml',\n",
              " 'img_06_424799500_00921.xml',\n",
              " 'img_06_4406743300_00092.xml',\n",
              " 'img_01_425008500_00532.xml',\n",
              " 'img_01_425244100_00158.xml',\n",
              " 'img_01_425609500_00746.xml',\n",
              " 'img_01_425005700_00285.xml',\n",
              " 'img_04_436162900_00016.xml',\n",
              " 'img_04_425502600_00017.xml',\n",
              " 'img_04_3437009100_00002.xml',\n",
              " 'img_06_425613600_00581.xml',\n",
              " 'img_03_3402617400_00898.xml',\n",
              " 'img_06_425616500_00769.xml',\n",
              " 'img_02_4402117200_00004.xml',\n",
              " 'img_01_425609500_00001.xml',\n",
              " 'img_01_425005700_00289.xml',\n",
              " 'img_05_425637900_00899.xml',\n",
              " 'img_04_4406645900_00001.xml',\n",
              " 'img_02_4403466500_00008.xml',\n",
              " 'img_07_4406645900_00747.xml',\n",
              " 'img_08_425508200_00364.xml',\n",
              " 'img_07_4406645900_00661.xml',\n",
              " 'img_02_436153600_00708.xml',\n",
              " 'img_02_4406446700_00001.xml',\n",
              " 'img_07_425390100_00053.xml',\n",
              " 'img_08_425503000_00053.xml',\n",
              " 'img_06_425502300_01396.xml',\n",
              " 'img_02_3436813700_00798.xml',\n",
              " 'img_04_4406645900_00763.xml',\n",
              " 'img_03_436068400_00001.xml',\n",
              " 'img_07_436164700_01552.xml',\n",
              " 'img_07_4406645900_00631.xml',\n",
              " 'img_06_3436814000_00007.xml',\n",
              " 'img_01_425639800_00874.xml',\n",
              " 'img_06_424799300_01133.xml',\n",
              " 'img_07_425100400_00100.xml',\n",
              " 'img_01_425005700_00202.xml',\n",
              " 'img_06_3437011300_00001.xml',\n",
              " 'img_02_425508400_00382.xml',\n",
              " 'img_02_436153600_00662.xml',\n",
              " 'img_03_425503400_00017.xml',\n",
              " 'img_01_425392100_00017.xml',\n",
              " 'img_05_425640000_00634.xml',\n",
              " 'img_07_4406444100_00004.xml',\n",
              " 'img_06_3436814000_00016.xml',\n",
              " 'img_08_425391700_00181.xml',\n",
              " 'img_06_427199900_01065.xml',\n",
              " 'img_02_436152900_00547.xml',\n",
              " 'img_02_436153300_01008.xml',\n",
              " 'img_06_4402625300_00104.xml',\n",
              " 'img_01_4406743300_00447.xml',\n",
              " 'img_02_425243200_00533.xml',\n",
              " 'img_01_4406743300_00166.xml',\n",
              " 'img_01_425008500_00585.xml',\n",
              " 'img_05_425613500_00596.xml',\n",
              " 'img_01_425005700_00270.xml',\n",
              " 'img_08_425008500_00873.xml',\n",
              " 'img_03_425639800_00874.xml',\n",
              " 'img_03_3402617700_00394.xml',\n",
              " 'img_08_425608200_00006.xml',\n",
              " 'img_08_425391700_00089.xml',\n",
              " 'img_05_4402542900_01917.xml',\n",
              " 'img_01_4406772100_00002.xml',\n",
              " 'img_06_425506600_00054.xml',\n",
              " 'img_08_4406743300_00413.xml',\n",
              " 'img_06_3436814000_00691.xml',\n",
              " 'img_07_4406645900_00877.xml',\n",
              " 'img_04_436163100_00021.xml',\n",
              " 'img_06_425644300_00598.xml',\n",
              " 'img_03_436150300_00329.xml',\n",
              " 'img_08_4406743300_00392.xml',\n",
              " 'img_02_4406645900_00288.xml',\n",
              " 'img_06_425506100_00051.xml',\n",
              " 'img_04_4406645900_00002.xml',\n",
              " 'img_06_3403395200_01004.xml',\n",
              " 'img_01_425007600_00599.xml',\n",
              " 'img_01_425005700_00309.xml',\n",
              " 'img_03_425243200_00116.xml',\n",
              " 'img_03_424826300_00949.xml',\n",
              " 'img_08_425639900_00613.xml',\n",
              " 'img_08_425637700_00842.xml',\n",
              " 'img_06_4404580000_00741.xml',\n",
              " 'img_06_425237000_00672.xml',\n",
              " 'img_02_436153600_00691.xml',\n",
              " 'img_08_425505500_00052.xml',\n",
              " 'img_06_436164700_01556.xml',\n",
              " 'img_03_436152900_00585.xml',\n",
              " 'img_01_425243300_00221.xml',\n",
              " 'img_02_4406645900_00565.xml',\n",
              " 'img_06_4406645900_00480.xml',\n",
              " 'img_06_425614600_00431.xml',\n",
              " 'img_01_425503800_00017.xml',\n",
              " 'img_02_425503100_00017.xml',\n",
              " 'img_06_3403400500_00339.xml',\n",
              " 'img_04_425502100_00018.xml',\n",
              " 'img_02_425507200_01517.xml',\n",
              " 'img_08_425008500_00872.xml',\n",
              " 'img_08_4406743300_00383.xml',\n",
              " 'img_01_425502600_00017.xml',\n",
              " 'img_06_425508700_00362.xml',\n",
              " 'img_01_425006200_01173.xml',\n",
              " 'img_01_4402724300_00001.xml',\n",
              " 'img_06_4402625300_01262.xml',\n",
              " 'img_08_4406743300_00414.xml',\n",
              " 'img_02_3402576500_00001.xml',\n",
              " 'img_04_SIS001577_00010.xml',\n",
              " 'img_01_425241500_01125.xml',\n",
              " 'img_06_425237000_00664.xml',\n",
              " 'img_07_436163600_00084.xml',\n",
              " 'img_07_424826800_00502.xml',\n",
              " 'img_06_425504800_00053.xml',\n",
              " 'img_06_425501100_00051.xml',\n",
              " 'img_02_425621800_00910.xml',\n",
              " 'img_03_4404374100_01295.xml',\n",
              " 'img_05_4406743300_00420.xml',\n",
              " 'img_05_425637800_00891.xml',\n",
              " 'img_08_4406743300_00410.xml',\n",
              " 'img_04_436068700_00001.xml',\n",
              " 'img_01_425005700_00241.xml',\n",
              " 'img_07_436164500_01565.xml',\n",
              " 'img_01_425005700_00466.xml',\n",
              " 'img_03_424992500_00388.xml',\n",
              " 'img_01_4406743300_00307.xml',\n",
              " 'img_08_425613700_00782.xml',\n",
              " 'img_07_424826800_00488.xml',\n",
              " 'img_01_425392100_00886.xml',\n",
              " 'img_01_425005700_00175.xml',\n",
              " 'img_01_425005700_00421.xml',\n",
              " 'img_01_425503000_00018.xml',\n",
              " 'img_06_4406562900_00002.xml',\n",
              " 'img_06_3403332000_00931.xml',\n",
              " 'img_03_425507000_00872.xml',\n",
              " 'img_03_425504800_00018.xml',\n",
              " 'img_07_SIS002353_00788.xml',\n",
              " 'img_04_425637500_00653.xml',\n",
              " 'img_08_4406743300_00430.xml',\n",
              " 'img_06_4406645900_00479.xml',\n",
              " 'img_05_4402719200_00029.xml',\n",
              " 'img_06_425389900_00054.xml',\n",
              " 'img_07_435974600_00217.xml',\n",
              " 'img_01_425005700_00172.xml',\n",
              " 'img_03_425501800_01196.xml',\n",
              " 'img_07_425008500_00314.xml',\n",
              " 'img_07_424826800_00493.xml',\n",
              " 'img_01_425241700_00432.xml',\n",
              " 'img_02_425646200_00062.xml',\n",
              " 'img_07_4406645900_00815.xml',\n",
              " 'img_04_SIS001577_00040.xml',\n",
              " 'img_01_425005700_00490.xml',\n",
              " 'img_03_4406645900_00454.xml',\n",
              " 'img_05_425505900_01176.xml',\n",
              " 'img_02_436164700_00001.xml',\n",
              " 'img_03_4402624500_00002.xml',\n",
              " 'img_02_3436786500_00152.xml',\n",
              " 'img_01_3436815300_00477.xml',\n",
              " 'img_02_436153600_00659.xml',\n",
              " 'img_01_425005700_00256.xml',\n",
              " 'img_07_4406645900_00355.xml',\n",
              " 'img_03_425390000_00022.xml',\n",
              " 'img_02_4406772100_01092.xml',\n",
              " 'img_02_425391100_00017.xml',\n",
              " 'img_06_425646200_00657.xml',\n",
              " 'img_02_3403404500_01254.xml',\n",
              " 'img_03_4402541500_01471.xml',\n",
              " 'img_06_3403399900_01007.xml',\n",
              " 'img_07_4406645900_00693.xml',\n",
              " 'img_03_4406743300_00001.xml',\n",
              " 'img_03_425507400_00018.xml',\n",
              " 'img_04_425504800_00018.xml',\n",
              " 'img_01_425005700_00286.xml',\n",
              " 'img_04_425502300_00017.xml',\n",
              " 'img_03_3403394800_00844.xml',\n",
              " 'img_02_425613600_00582.xml',\n",
              " 'img_01_425005700_00410.xml',\n",
              " 'img_06_425502300_01400.xml',\n",
              " 'img_03_436164500_01130.xml',\n",
              " 'img_02_436164000_00006.xml',\n",
              " 'img_02_425505500_00018.xml',\n",
              " 'img_02_4406783500_00010.xml',\n",
              " 'img_07_425390900_00086.xml',\n",
              " 'img_01_425005700_00321.xml',\n",
              " 'img_08_4406743300_00069.xml',\n",
              " 'img_06_425508200_00053.xml',\n",
              " 'img_03_425501900_00017.xml',\n",
              " 'img_02_425508400_00141.xml',\n",
              " 'img_02_SIS001491_00257.xml',\n",
              " 'img_07_4406645900_00581.xml',\n",
              " 'img_08_4406743300_00417.xml',\n",
              " 'img_02_436153600_00658.xml',\n",
              " 'img_02_3436786500_00137.xml',\n",
              " 'img_07_3436814000_00011.xml',\n",
              " 'img_07_425390900_00058.xml',\n",
              " 'img_03_424992300_00001.xml',\n",
              " 'img_08_4406743300_00406.xml',\n",
              " 'img_04_425391100_00017.xml',\n",
              " 'img_02_425622400_00001.xml',\n",
              " 'img_04_4403690400_00005.xml',\n",
              " 'img_04_4402787600_00001.xml',\n",
              " 'img_07_4405168700_00710.xml',\n",
              " 'img_03_3403404300_01219.xml',\n",
              " 'img_03_424992300_00223.xml',\n",
              " 'img_03_4404580600_00513.xml',\n",
              " 'img_03_424714400_00306.xml',\n",
              " 'img_03_436152900_00593.xml',\n",
              " 'img_04_4406743300_00592.xml',\n",
              " 'img_07_3402617400_01102.xml',\n",
              " 'img_01_4406743300_00195.xml',\n",
              " 'img_02_425507200_01515.xml',\n",
              " 'img_03_SIS001540_00798.xml',\n",
              " 'img_07_425100400_00088.xml',\n",
              " 'img_05_425244400_00881.xml',\n",
              " 'img_02_4406772100_00500.xml',\n",
              " 'img_02_425507000_00872.xml',\n",
              " 'img_07_4406645900_00740.xml',\n",
              " 'img_08_4401438800_01040.xml',\n",
              " 'img_02_4402541100_00001.xml',\n",
              " 'img_06_436185800_00727.xml',\n",
              " 'img_01_425005700_00291.xml',\n",
              " 'img_08_425391700_00185.xml',\n",
              " 'img_03_425501800_01160.xml',\n",
              " 'img_05_425505100_00052.xml',\n",
              " 'img_04_436165600_00004.xml',\n",
              " 'img_07_4402625300_00105.xml',\n",
              " 'img_06_425392300_00387.xml',\n",
              " 'img_01_425005700_00327.xml',\n",
              " 'img_03_425613700_00782.xml',\n",
              " 'img_07_4406645900_00659.xml',\n",
              " 'img_01_425503600_00017.xml',\n",
              " 'img_06_3436814300_00050.xml',\n",
              " 'img_01_425005700_00395.xml',\n",
              " 'img_03_425391800_00255.xml',\n",
              " 'img_05_4406743300_00416.xml',\n",
              " 'img_07_4406743300_00112.xml',\n",
              " 'img_08_425504800_00052.xml',\n",
              " 'img_07_4404615700_01264.xml',\n",
              " 'img_04_4406645900_00767.xml',\n",
              " 'img_04_436068600_00001.xml',\n",
              " 'img_02_425237000_00520.xml',\n",
              " 'img_07_425508400_00968.xml',\n",
              " 'img_08_4406743300_00439.xml',\n",
              " 'img_03_SIS001540_00801.xml',\n",
              " 'img_02_436184600_00785.xml',\n",
              " 'img_01_425392100_00662.xml',\n",
              " 'img_06_436185800_00723.xml',\n",
              " 'img_03_3403401700_00908.xml',\n",
              " 'img_03_SIS001540_00778.xml',\n",
              " 'img_02_SIS001577_00072.xml',\n",
              " 'img_03_4402724500_01243.xml',\n",
              " 'img_05_4406645900_00038.xml',\n",
              " 'img_07_4406743300_00035.xml',\n",
              " 'img_02_3436813700_00269.xml',\n",
              " 'img_04_4402622500_00375.xml',\n",
              " 'img_01_425000300_00520.xml',\n",
              " 'img_06_425640000_00633.xml',\n",
              " 'img_01_4403565100_00003.xml',\n",
              " 'img_03_425501800_01166.xml',\n",
              " 'img_06_3403397400_00907.xml',\n",
              " 'img_06_425506300_01030.xml',\n",
              " 'img_04_436164000_00006.xml',\n",
              " 'img_03_SIS001546_00060.xml',\n",
              " 'img_02_436153600_00689.xml',\n",
              " 'img_01_425005700_00396.xml',\n",
              " 'img_08_425506100_01049.xml',\n",
              " 'img_02_4403955000_00001.xml',\n",
              " 'img_04_431854700_00086.xml',\n",
              " 'img_02_3436813700_00318.xml',\n",
              " 'img_03_425507000_00900.xml',\n",
              " 'img_04_425392100_00023.xml',\n",
              " 'img_08_425508100_01294.xml',\n",
              " 'img_02_4406645900_00339.xml',\n",
              " 'img_06_425506300_01028.xml',\n",
              " 'img_02_4403466600_00003.xml',\n",
              " 'img_01_4402541100_00001.xml',\n",
              " 'img_01_424826800_00002.xml',\n",
              " 'img_06_425502600_00053.xml',\n",
              " 'img_07_4404580600_00507.xml',\n",
              " 'img_02_3402618000_00010.xml',\n",
              " 'img_01_425005700_00464.xml',\n",
              " 'img_02_425507200_00018.xml',\n",
              " 'img_03_425505000_00018.xml',\n",
              " 'img_03_436184600_00794.xml',\n",
              " 'img_01_4406743300_00186.xml',\n",
              " 'img_01_425241400_00039.xml',\n",
              " 'img_04_4402785000_00001.xml',\n",
              " 'img_05_424798500_01234.xml',\n",
              " 'img_07_425508700_00363.xml',\n",
              " 'img_04_431854700_00385.xml',\n",
              " 'img_01_425005700_00302.xml',\n",
              " 'img_03_4404580600_00527.xml',\n",
              " 'img_02_425503500_00017.xml',\n",
              " 'img_04_436068100_00089.xml',\n",
              " 'img_08_425391700_00183.xml',\n",
              " 'img_08_4406743300_00465.xml',\n",
              " 'img_03_3403397500_01395.xml',\n",
              " 'img_05_425503200_00065.xml',\n",
              " 'img_02_3436786500_00141.xml',\n",
              " 'img_02_436152900_00563.xml',\n",
              " 'img_03_425503100_00066.xml',\n",
              " 'img_03_3402617400_00941.xml',\n",
              " 'img_07_425507400_01692.xml',\n",
              " 'img_01_425005700_00168.xml',\n",
              " 'img_03_436152900_00545.xml',\n",
              " 'img_07_4406743300_00056.xml',\n",
              " 'img_01_425006200_00373.xml',\n",
              " 'img_03_3403403300_00700.xml',\n",
              " 'img_01_4402540800_01483.xml',\n",
              " 'img_06_425237000_00834.xml',\n",
              " 'img_04_3436787300_00002.xml',\n",
              " 'img_02_436185000_00016.xml',\n",
              " 'img_07_3403334900_00596.xml',\n",
              " 'img_08_425506100_01064.xml',\n",
              " 'img_02_425506300_00018.xml',\n",
              " 'img_03_3403404800_00998.xml',\n",
              " 'img_08_425506100_01058.xml',\n",
              " 'img_03_425501700_00018.xml',\n",
              " 'img_01_425005700_00446.xml',\n",
              " 'img_08_425508100_01404.xml',\n",
              " 'img_04_425392100_00022.xml',\n",
              " 'img_07_4404374100_01265.xml',\n",
              " 'img_02_3436813700_00309.xml',\n",
              " 'img_07_425390800_00009.xml',\n",
              " 'img_01_425005700_00162.xml',\n",
              " 'img_03_4406645900_00418.xml',\n",
              " 'img_03_SIS001540_00794.xml',\n",
              " 'img_03_4406645900_00009.xml',\n",
              " 'img_01_425244400_00900.xml',\n",
              " 'img_07_4406645900_00576.xml',\n",
              " 'img_07_425390900_00080.xml',\n",
              " 'img_06_436164300_00003.xml',\n",
              " 'img_06_427199900_00007.xml',\n",
              " 'img_07_425613800_00786.xml',\n",
              " 'img_07_4406645900_00586.xml',\n",
              " 'img_03_424714400_00001.xml',\n",
              " 'img_03_425391000_00491.xml',\n",
              " 'img_01_425005700_00164.xml',\n",
              " 'img_03_425004200_00987.xml',\n",
              " 'img_03_4402766600_00002.xml',\n",
              " 'img_04_4402540800_01484.xml',\n",
              " 'img_07_3436814000_00016.xml',\n",
              " 'img_06_425614600_00421.xml',\n",
              " 'img_03_3403400500_00340.xml',\n",
              " 'img_01_425637800_00001.xml',\n",
              " 'img_03_3402617100_00120.xml',\n",
              " 'img_05_425503800_00053.xml',\n",
              " 'img_03_424712600_00016.xml',\n",
              " 'img_04_4402117000_00004.xml',\n",
              " 'img_01_425008000_00071.xml',\n",
              " 'img_03_3403392000_01070.xml',\n",
              " 'img_05_425243500_01096.xml',\n",
              " 'img_07_4406645900_00647.xml',\n",
              " 'img_04_436163100_00006.xml',\n",
              " 'img_01_425005700_00298.xml',\n",
              " 'img_08_425638500_00091.xml',\n",
              " 'img_03_4406645900_00542.xml',\n",
              " 'img_03_425644200_00680.xml',\n",
              " 'img_03_424992500_01040.xml',\n",
              " 'img_05_4405356600_00896.xml',\n",
              " 'img_02_425505100_00022.xml',\n",
              " 'img_01_4402116900_00003.xml',\n",
              " 'img_02_3402617400_01103.xml',\n",
              " 'img_02_425502300_00018.xml',\n",
              " 'img_07_435974600_00224.xml',\n",
              " 'img_03_425614700_00001.xml',\n",
              " 'img_05_4406743300_00371.xml',\n",
              " 'img_02_436068400_00001.xml',\n",
              " 'img_08_3436789300_00961.xml',\n",
              " 'img_02_436153600_00696.xml',\n",
              " 'img_04_4406743300_00003.xml',\n",
              " 'img_08_425391700_00179.xml',\n",
              " 'img_01_425008500_00677.xml',\n",
              " 'img_06_425507400_00053.xml',\n",
              " 'img_03_SIS001540_00789.xml',\n",
              " 'img_01_425005700_00287.xml',\n",
              " 'img_03_424992500_00514.xml',\n",
              " 'img_03_436184600_00776.xml',\n",
              " 'img_06_3403333400_00834.xml',\n",
              " 'img_03_424992300_00206.xml',\n",
              " 'img_02_3402618000_00002.xml',\n",
              " 'img_08_425502900_00052.xml',\n",
              " 'img_01_424826300_00950.xml',\n",
              " 'img_08_425391700_00182.xml',\n",
              " 'img_07_425508400_00967.xml',\n",
              " 'img_02_424799600_00382.xml',\n",
              " 'img_04_4402622500_00371.xml',\n",
              " 'img_01_425243600_00848.xml',\n",
              " 'img_02_436153600_00669.xml',\n",
              " 'img_07_4406743300_00041.xml',\n",
              " 'img_03_425637500_00012.xml',\n",
              " 'img_01_425005700_00487.xml',\n",
              " 'img_02_425507000_00913.xml',\n",
              " 'img_03_4402270500_00004.xml',\n",
              " 'img_07_3403335600_00795.xml',\n",
              " 'img_07_4404374100_01338.xml',\n",
              " 'img_01_425008500_00339.xml',\n",
              " 'img_08_425501100_00051.xml',\n",
              " 'img_06_425237000_00670.xml',\n",
              " 'img_08_4406743300_00477.xml',\n",
              " 'img_06_425614700_00694.xml',\n",
              " 'img_01_425005700_00201.xml',\n",
              " 'img_07_4404613900_01090.xml',\n",
              " 'img_01_3436789500_00004.xml',\n",
              " 'img_01_425005700_00273.xml',\n",
              " 'img_05_425392200_00053.xml',\n",
              " 'img_07_4406743300_00001.xml',\n",
              " 'img_05_425505000_00051.xml',\n",
              " 'img_01_4406743300_00160.xml',\n",
              " 'img_01_425008500_00338.xml',\n",
              " 'img_03_3402617500_00138.xml',\n",
              " 'img_07_4405376800_00037.xml',\n",
              " 'img_06_425608200_00007.xml',\n",
              " 'img_05_425506100_00052.xml',\n",
              " 'img_02_436184600_00775.xml',\n",
              " 'img_02_425616500_00770.xml',\n",
              " 'img_06_424799200_00013.xml',\n",
              " 'img_08_4402719200_00026.xml',\n",
              " 'img_07_4406645900_00179.xml',\n",
              " 'img_01_425008500_00793.xml',\n",
              " 'img_03_425644600_00001.xml',\n",
              " 'img_08_4406743300_00401.xml',\n",
              " 'img_01_425005700_00163.xml',\n",
              " 'img_01_4402117100_00006.xml',\n",
              " 'img_03_4402766800_00010.xml',\n",
              " 'img_01_4406743300_00804.xml',\n",
              " 'img_07_425390900_00071.xml',\n",
              " 'img_04_425505400_00017.xml',\n",
              " 'img_06_425503000_00053.xml',\n",
              " 'img_01_424995500_00255.xml',\n",
              " 'img_06_3403337800_00766.xml',\n",
              " 'img_07_4406645900_00660.xml',\n",
              " 'img_07_4406645900_00852.xml',\n",
              " 'img_05_4406743300_00564.xml',\n",
              " 'img_01_425007600_00532.xml',\n",
              " 'img_03_SIS001546_00041.xml',\n",
              " 'img_06_425237000_00674.xml',\n",
              " 'img_01_425501700_00022.xml',\n",
              " 'img_01_425005700_00320.xml',\n",
              " 'img_08_4402842500_01044.xml',\n",
              " 'img_07_4404374100_01315.xml',\n",
              " 'img_06_424798500_01234.xml',\n",
              " 'img_02_4403466500_00023.xml',\n",
              " 'img_08_425502300_00053.xml',\n",
              " 'img_05_424799400_01080.xml',\n",
              " 'img_06_4406743300_00094.xml',\n",
              " 'img_07_4406645900_00755.xml',\n",
              " 'img_03_3403397300_00901.xml',\n",
              " 'img_01_436067700_00689.xml',\n",
              " 'img_06_425502300_01408.xml',\n",
              " 'img_02_436184600_00782.xml',\n",
              " 'img_06_4406645900_00490.xml',\n",
              " 'img_08_425391700_00095.xml',\n",
              " 'img_06_3436814600_00007.xml',\n",
              " 'img_02_3436813700_00307.xml',\n",
              " 'img_05_4406645900_00043.xml',\n",
              " 'img_03_4402724500_01242.xml',\n",
              " 'img_01_425501900_00018.xml',\n",
              " 'img_05_4406743300_00507.xml',\n",
              " 'img_02_424799300_00040.xml',\n",
              " 'img_03_436164500_00818.xml',\n",
              " 'img_03_4406772100_00001.xml',\n",
              " 'img_05_425502700_00052.xml',\n",
              " 'img_04_424826100_00001.xml',\n",
              " 'img_05_425243500_00952.xml',\n",
              " 'img_02_4402852400_00774.xml',\n",
              " 'img_02_425507000_00882.xml',\n",
              " 'img_06_425502300_01407.xml',\n",
              " 'img_01_425005700_00444.xml',\n",
              " 'img_08_4406743300_00390.xml',\n",
              " 'img_07_425508300_00929.xml',\n",
              " 'img_03_425503100_00022.xml',\n",
              " 'img_01_425392200_00018.xml',\n",
              " 'img_08_4406743300_00461.xml',\n",
              " 'img_03_425644100_00594.xml',\n",
              " 'img_03_SIS001540_00792.xml',\n",
              " 'img_01_425637900_00899.xml',\n",
              " 'img_02_SIS001522_00007.xml',\n",
              " 'img_05_4405381400_00774.xml',\n",
              " 'img_01_425241600_00649.xml',\n",
              " 'img_08_425504800_00053.xml',\n",
              " 'img_07_4406645900_00154.xml',\n",
              " 'img_03_425501800_01100.xml',\n",
              " 'img_07_4406645900_00001.xml',\n",
              " 'img_07_4406645900_00842.xml',\n",
              " 'img_03_425391800_00249.xml',\n",
              " 'img_01_425503100_00017.xml',\n",
              " 'img_06_4406645900_00489.xml',\n",
              " 'img_01_425005700_00337.xml',\n",
              " 'img_05_4406743300_00405.xml',\n",
              " 'img_06_425505700_00053.xml',\n",
              " 'img_02_SIS001522_00036.xml',\n",
              " 'img_02_425507000_00018.xml',\n",
              " 'img_03_436185500_00005.xml',\n",
              " 'img_03_4406645900_00544.xml',\n",
              " 'img_01_425005700_00317.xml',\n",
              " 'img_03_436184600_00799.xml',\n",
              " 'img_07_4402719100_00025.xml',\n",
              " 'img_02_436153600_00666.xml',\n",
              " 'img_06_425502300_01438.xml',\n",
              " 'img_03_436184600_00795.xml',\n",
              " 'img_05_3403334800_00898.xml',\n",
              " 'img_04_436163100_00007.xml',\n",
              " 'img_03_436184600_00797.xml',\n",
              " 'img_01_425005700_00555.xml',\n",
              " 'img_06_425237000_00661.xml',\n",
              " 'img_02_436153600_00684.xml',\n",
              " 'img_03_424992500_00525.xml',\n",
              " 'img_02_4405377500_01014.xml',\n",
              " 'img_01_425006200_00175.xml',\n",
              " 'img_05_3403334600_00682.xml',\n",
              " 'img_07_425508400_00969.xml',\n",
              " 'img_07_3436814000_00676.xml',\n",
              " 'img_03_424992300_00311.xml',\n",
              " 'img_03_4406645900_00017.xml',\n",
              " 'img_07_4406743300_00099.xml',\n",
              " 'img_06_4406424700_00001.xml',\n",
              " 'img_06_3436814000_00679.xml',\n",
              " 'img_03_436152900_00005.xml',\n",
              " 'img_03_SIS001540_00788.xml',\n",
              " 'img_01_425241600_00283.xml',\n",
              " 'img_01_425005700_00200.xml',\n",
              " 'img_03_436152900_00530.xml',\n",
              " 'img_04_425380400_00732.xml',\n",
              " 'img_01_425005700_00379.xml',\n",
              " 'img_06_425503400_00040.xml',\n",
              " 'img_05_4406743300_00467.xml',\n",
              " 'img_08_425007600_01072.xml',\n",
              " 'img_01_4402818600_00001.xml',\n",
              " 'img_03_3402617400_00919.xml',\n",
              " 'img_03_4405000700_00831.xml',\n",
              " 'img_02_436152900_00538.xml',\n",
              " 'img_04_425392200_00018.xml',\n",
              " 'img_06_424826800_00502.xml',\n",
              " 'img_03_436156500_01005.xml',\n",
              " 'img_03_3402617100_00124.xml',\n",
              " 'img_07_4404374100_01349.xml',\n",
              " 'img_06_4406743300_00093.xml',\n",
              " 'img_05_425613800_00787.xml',\n",
              " 'img_07_4406645900_00367.xml',\n",
              " 'img_04_425613500_00002.xml',\n",
              " 'img_04_4402622500_00362.xml',\n",
              " 'img_08_4406743300_00400.xml',\n",
              " 'img_06_425614600_00435.xml',\n",
              " 'img_05_425502600_00052.xml',\n",
              " 'img_02_4403466100_00013.xml',\n",
              " 'img_07_425390900_00059.xml',\n",
              " 'img_01_425005700_00301.xml',\n",
              " 'img_08_4406743300_00019.xml',\n",
              " 'img_08_425503400_00053.xml',\n",
              " 'img_03_436150300_00318.xml',\n",
              " 'img_01_425005700_00322.xml',\n",
              " 'img_01_425005700_00362.xml',\n",
              " 'img_01_425503300_00018.xml',\n",
              " 'img_08_425638500_00036.xml',\n",
              " 'img_01_425503600_00016.xml',\n",
              " 'img_06_3436815600_01098.xml',\n",
              " 'img_06_425502300_01403.xml',\n",
              " 'img_02_4406772100_00443.xml',\n",
              " 'img_02_SIS001574_00003.xml',\n",
              " 'img_01_425392100_00018.xml',\n",
              " 'img_06_3403333900_00758.xml',\n",
              " 'img_08_4406743300_00397.xml',\n",
              " 'img_06_3403405000_00719.xml',\n",
              " 'img_06_425237000_00528.xml',\n",
              " 'img_02_3403404600_01001.xml',\n",
              " 'img_02_425392400_00020.xml',\n",
              " 'img_04_SIS001577_00052.xml',\n",
              " 'img_01_4406743300_00017.xml',\n",
              " 'img_05_4402826400_01261.xml',\n",
              " 'img_01_425006600_00498.xml',\n",
              " 'img_01_425000300_00103.xml',\n",
              " 'img_06_425614600_00426.xml',\n",
              " 'img_01_425006800_00262.xml',\n",
              " ...]"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ],
      "source": [
        "os.listdir(\"/kaggle/input/defects-class-and-location/label/label\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "K4b4K6RuKihI"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SxsqsRBtKtuP",
        "outputId": "02e2b700-36d0-4278-c67c-35050d4af517"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2306"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ],
      "source": [
        "image_path = glob.glob(\"/kaggle/input/defects-class-and-location/images/images/*/*.jpg\")\n",
        "len(image_path)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S6xWgdUWKijY",
        "outputId": "5d2a5dc8-3415-4bbf-8895-7393a42b715e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2280"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ],
      "source": [
        "xmls_path = glob.glob(\"/kaggle/input/defects-class-and-location/label/label/*.xml\")\n",
        "len(xmls_path)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "iQmoxBtLKinX"
      },
      "outputs": [],
      "source": [
        "xmls_path.sort(key = lambda x:x.split(\"/\")[-1].split(\".xml\")[0])\n",
        "image_path.sort(key = lambda x:x.split(\"/\")[-1].split(\".jpg\")[0])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-sUL4em0Kiqe",
        "outputId": "35f2ddc0-5005-4e52-e34c-a3fbf35a8218"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['img_01_3402617700_00001',\n",
              " 'img_01_3402617700_01009',\n",
              " 'img_01_3436789500_00004',\n",
              " 'img_01_3436814600_00259',\n",
              " 'img_01_3436815300_00473']"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ],
      "source": [
        "xmls_train = [path.split(\"/\")[-1].split(\".\")[0] for path in xmls_path]\n",
        "xmls_train[:5]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WZV7ifAuK6mg",
        "outputId": "f2e412df-12ce-4aa0-f1ab-9151acf6c8bd"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['/kaggle/input/defects-class-and-location/images/images/crescent_gap/img_01_3402617700_00001.jpg',\n",
              " '/kaggle/input/defects-class-and-location/images/images/crescent_gap/img_01_3402617700_01009.jpg',\n",
              " '/kaggle/input/defects-class-and-location/images/images/crease/img_01_3436789500_00004.jpg',\n",
              " '/kaggle/input/defects-class-and-location/images/images/silk_spot/img_01_3436814600_00259.jpg',\n",
              " '/kaggle/input/defects-class-and-location/images/images/silk_spot/img_01_3436815300_00473.jpg']"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ],
      "source": [
        "imgs_train = [img for img in image_path if (img.split(\"/\")[-1].split)(\".jpg\")[0] in xmls_train]\n",
        "imgs_train[:5]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S2uN1gcPK6o9",
        "outputId": "6e69f95d-4971-4642-c225-1af3afa9566e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(2280, 2280)"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ],
      "source": [
        "len(imgs_train),len(xmls_path)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JDak-0z3K6qx",
        "outputId": "043af74c-777a-43b7-cc65-1aa51b01ab9e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['crescent_gap', 'crescent_gap', 'crease', 'silk_spot', 'silk_spot']"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ],
      "source": [
        "labels = [label.split(\"/\")[-2] for label in imgs_train]\n",
        "labels[:5]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "tI-e3TWrK6sg",
        "outputId": "e9b1d430-1cc8-4c14-c87b-2722c8e0bf88"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Defect Type\n",
              "0     crescent_gap\n",
              "1     crescent_gap\n",
              "2           crease\n",
              "3        silk_spot\n",
              "4        silk_spot\n",
              "...            ...\n",
              "2275     silk_spot\n",
              "2276     silk_spot\n",
              "2277     silk_spot\n",
              "2278     silk_spot\n",
              "2279  crescent_gap\n",
              "\n",
              "[2280 rows x 1 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-32399259-5c42-4a23-bdc9-33da6c288d13\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Defect Type</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>crescent_gap</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>crescent_gap</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>crease</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>silk_spot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>silk_spot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2275</th>\n",
              "      <td>silk_spot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2276</th>\n",
              "      <td>silk_spot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2277</th>\n",
              "      <td>silk_spot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2278</th>\n",
              "      <td>silk_spot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2279</th>\n",
              "      <td>crescent_gap</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2280 rows × 1 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-32399259-5c42-4a23-bdc9-33da6c288d13')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-32399259-5c42-4a23-bdc9-33da6c288d13 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-32399259-5c42-4a23-bdc9-33da6c288d13');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-b97fc81d-69f7-445d-9b74-50b413e88df1\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b97fc81d-69f7-445d-9b74-50b413e88df1')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-b97fc81d-69f7-445d-9b74-50b413e88df1 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_2dba10fd-5c8c-40b5-904a-c478f2dabe00\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('labels')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_2dba10fd-5c8c-40b5-904a-c478f2dabe00 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('labels');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "labels",
              "summary": "{\n  \"name\": \"labels\",\n  \"rows\": 2280,\n  \"fields\": [\n    {\n      \"column\": \"Defect Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"rolled_pit\",\n          \"crease\",\n          \"inclusion\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 21
        }
      ],
      "source": [
        "labels = pd.DataFrame(labels, columns = [\"Defect Type\"])\n",
        "labels"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "592U9c03K6ur"
      },
      "outputs": [],
      "source": [
        "# One-hot encoding for multiple classes\n",
        "from sklearn.preprocessing import LabelBinarizer\n",
        "\n",
        "# Obtain training labels without duplication\n",
        "Class = labels[\"Defect Type\"].unique()\n",
        "# Store data values in key:value pairs with Python dictionaries\n",
        "Class_dict = dict(zip(Class, range(1,len(Class) + 1)))\n",
        "labels[\"Class\"] = labels[\"Defect Type\"].apply(lambda x: Class_dict[x])\n",
        "\n",
        "lb = LabelBinarizer()\n",
        "# Fit label binarizer\n",
        "lb.fit(list(Class_dict.values()))\n",
        "# Convert multi-class labels to binary labels (belong or does not belong to the class)\n",
        "transformed_labels = lb.transform(labels[\"Class\"])\n",
        "y_bin_labels = []\n",
        "\n",
        "for i in range(transformed_labels.shape[1]):\n",
        "    y_bin_labels.append(\"Class\" + str(i))\n",
        "    labels[\"Class\" + str(i + 1)] = transformed_labels[:, i]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JIhRcyJ3K6xu",
        "outputId": "8c902cb0-e367-4971-cc10-73391e82ab0c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'crescent_gap': 1,\n",
              " 'crease': 2,\n",
              " 'silk_spot': 3,\n",
              " 'water_spot': 4,\n",
              " 'welding_line': 5,\n",
              " 'inclusion': 6,\n",
              " 'oil_spot': 7,\n",
              " 'waist folding': 8,\n",
              " 'rolled_pit': 9,\n",
              " 'punching_hole': 10}"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ],
      "source": [
        "Class_dict"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "cZtseUTqK60o",
        "outputId": "99048e6f-9c09-4167-b761-ead056a8e8b6"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Class1  Class2  Class3  Class4  Class5  Class6  Class7  Class8  Class9  \\\n",
              "0       1       0       0       0       0       0       0       0       0   \n",
              "1       1       0       0       0       0       0       0       0       0   \n",
              "2       0       1       0       0       0       0       0       0       0   \n",
              "3       0       0       1       0       0       0       0       0       0   \n",
              "4       0       0       1       0       0       0       0       0       0   \n",
              "\n",
              "   Class10  \n",
              "0        0  \n",
              "1        0  \n",
              "2        0  \n",
              "3        0  \n",
              "4        0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8facfb12-c7b4-45b1-8119-23a7c533d202\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Class1</th>\n",
              "      <th>Class2</th>\n",
              "      <th>Class3</th>\n",
              "      <th>Class4</th>\n",
              "      <th>Class5</th>\n",
              "      <th>Class6</th>\n",
              "      <th>Class7</th>\n",
              "      <th>Class8</th>\n",
              "      <th>Class9</th>\n",
              "      <th>Class10</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8facfb12-c7b4-45b1-8119-23a7c533d202')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8facfb12-c7b4-45b1-8119-23a7c533d202 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8facfb12-c7b4-45b1-8119-23a7c533d202');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-34e436b0-fb36-4b61-9009-1af70cca9e14\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-34e436b0-fb36-4b61-9009-1af70cca9e14')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-34e436b0-fb36-4b61-9009-1af70cca9e14 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "labels",
              "summary": "{\n  \"name\": \"labels\",\n  \"rows\": 2280,\n  \"fields\": [\n    {\n      \"column\": \"Class1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Class2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Class3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Class4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Class5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Class6\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Class7\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Class8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Class9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Class10\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 24
        }
      ],
      "source": [
        "labels.drop(\"Class\", axis = 1, inplace = True)\n",
        "labels.drop(\"Defect Type\", axis = 1, inplace = True)\n",
        "labels.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ZFfJfsNFK63m"
      },
      "outputs": [],
      "source": [
        "def to_labels(path):\n",
        "    # Read the annotation file\n",
        "    xml = open(\"{}\".format(path)).read()\n",
        "    sel = etree.HTML(xml)\n",
        "    # Obtain the image width\n",
        "    width = int(sel.xpath(\"//size/width/text()\")[0])\n",
        "    # Obtain the image height\n",
        "    height = int(sel.xpath(\"//size/height/text()\")[0])\n",
        "    # Extract the bounding box coordinates\n",
        "    xmin = int(sel.xpath(\"//bndbox/xmin/text()\")[0])\n",
        "    xmax = int(sel.xpath(\"//bndbox/xmax/text()\")[0])\n",
        "    ymin = int(sel.xpath(\"//bndbox/ymin/text()\")[0])\n",
        "    ymax = int(sel.xpath(\"//bndbox/ymax/text()\")[0])\n",
        "    # Return the relative coordinates\n",
        "    return [xmin/width, ymin/height, xmax/width, ymax/height]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ODT-YO-pK65w",
        "outputId": "e15cf2b4-d0e2-4d8b-d206-bf412c05e11e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[[0.8486328125, 0.806, 0.951171875, 0.993],\n",
              " [0.857421875, 0.298, 0.96044921875, 0.858],\n",
              " [0.47900390625, 0.182, 0.9990234375, 0.249],\n",
              " [0.3642578125, 0.017, 0.49365234375, 0.993],\n",
              " [0.3974609375, 0.017, 0.7431640625, 0.978]]"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ],
      "source": [
        "coors = [to_labels(path) for path in xmls_path]\n",
        "coors[:5]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "4ZyvsQ3rLN8R"
      },
      "outputs": [],
      "source": [
        "xmin, ymin, xmax, ymax = list(zip(*coors))\n",
        "\n",
        "# Convert to Numpy array\n",
        "xmin = np.array(xmin)\n",
        "ymin = np.array(ymin)\n",
        "xmax = np.array(xmax)\n",
        "ymax = np.array(ymax)\n",
        "label = np.array(labels.values)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "od8VPMazLN_J",
        "outputId": "c24d43a6-3160-47c1-daa6-f9e464e17e56"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<_TensorSliceDataset element_spec=(TensorSpec(shape=(), dtype=tf.float64, name=None), TensorSpec(shape=(), dtype=tf.float64, name=None), TensorSpec(shape=(), dtype=tf.float64, name=None), TensorSpec(shape=(), dtype=tf.float64, name=None), TensorSpec(shape=(10,), dtype=tf.int64, name=None))>"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ],
      "source": [
        "labels_dataset = tf.data.Dataset.from_tensor_slices((xmin, ymin, xmax, ymax, label))\n",
        "labels_dataset"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "MILFgsAYLOBE"
      },
      "outputs": [],
      "source": [
        "def load_image(path):\n",
        "    image = tf.io.read_file(path)\n",
        "    image = tf.image.decode_jpeg(image,3)\n",
        "    image = tf.image.resize(image,[224,224])\n",
        "    image = tf.cast(image,tf.float32)\n",
        "    image = image / 255\n",
        "    return image"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a_2hxtg1LOD1",
        "outputId": "66bbbd96-00ca-44b2-fe00-2fd54889d199"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<_ZipDataset element_spec=(TensorSpec(shape=(224, 224, 3), dtype=tf.float32, name=None), (TensorSpec(shape=(), dtype=tf.float64, name=None), TensorSpec(shape=(), dtype=tf.float64, name=None), TensorSpec(shape=(), dtype=tf.float64, name=None), TensorSpec(shape=(), dtype=tf.float64, name=None), TensorSpec(shape=(10,), dtype=tf.int64, name=None)))>"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ],
      "source": [
        "dataset = tf.data.Dataset.from_tensor_slices(imgs_train)\n",
        "dataset = dataset.map(load_image)\n",
        "\n",
        "dataset_label = tf.data.Dataset.zip((dataset, labels_dataset))\n",
        "dataset_label"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "-SIX7mrqKixO"
      },
      "outputs": [],
      "source": [
        "batch_size = 32\n",
        "dataset_label = dataset_label.repeat().shuffle(500).batch(batch_size)\n",
        "\n",
        "# Creates a Dataset that prefetches elements from this dataset\n",
        "# Most dataset input pipelines should end with a call to prefetch\n",
        "# This allows later elements to be prepared while the current element is being processed\n",
        "# This often improves latency and throughput, at the cost of using additional memory to store prefetched elements\n",
        "\n",
        "dataset_label = dataset_label.prefetch(tf.data.experimental.AUTOTUNE)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "O8kTz7zjLfo2",
        "outputId": "0575002b-0ef9-4d00-f2e9-bb61df72b910"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1824, 456)"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ],
      "source": [
        "train_count = int(len(imgs_train) * 0.8)\n",
        "test_count = int(len(imgs_train) * 0.2)\n",
        "train_count, test_count"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "5mfEOG2uLfxX"
      },
      "outputs": [],
      "source": [
        "train_dataset = dataset_label.skip(test_count)\n",
        "test_dataset = dataset_label.take(test_count)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UPcahfGxLf0K",
        "outputId": "24497c31-702b-403b-bc11-b4661287fb61"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{1: 'crescent_gap',\n",
              " 2: 'crease',\n",
              " 3: 'silk_spot',\n",
              " 4: 'water_spot',\n",
              " 5: 'welding_line',\n",
              " 6: 'inclusion',\n",
              " 7: 'oil_spot',\n",
              " 8: 'waist folding',\n",
              " 9: 'rolled_pit',\n",
              " 10: 'punching_hole'}"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ],
      "source": [
        "class_dict = {v:k for k,v in Class_dict.items()}\n",
        "class_dict"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "ISUWsZ2fLkFl",
        "outputId": "19bc4050-9422-460a-9c53-cf1161646d92"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "for img, label in train_dataset.take(1):\n",
        "    plt.imshow(keras.preprocessing.image.array_to_img(img[0]))\n",
        "    out1, out2, out3, out4, out5 = label\n",
        "    xmin, ymin, xmax, ymax = out1[0].numpy()*224, out2[0].numpy()*224, out3[0].numpy()*224, out4[0].numpy()*224\n",
        "    rect = Rectangle((xmin,ymin),(xmax - xmin),(ymax - ymin), fill = False, color = \"r\")\n",
        "    ax = plt.gca()\n",
        "    ax.axes.add_patch(rect)\n",
        "    pred_imglist = []\n",
        "    pred_imglist.append(class_dict[np.argmax(out5[0])+1])\n",
        "    plt.title(pred_imglist)\n",
        "    plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "w-e9IAQuLkJV",
        "outputId": "5f33f22d-5e7f-4a63-fe3e-b783a0ae0590"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/vgg16/vgg16_weights_tf_dim_ordering_tf_kernels_notop.h5\n",
            "\u001b[1m58889256/58889256\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 0us/step\n"
          ]
        }
      ],
      "source": [
        "# Import VGG16 model with pre-trained weights from ImageNet\n",
        "\n",
        "base_vgg16 = tf.keras.applications.VGG16(weights = \"imagenet\",\n",
        "                                         include_top = False,\n",
        "                                         input_shape = (224,224,3),\n",
        "                                         pooling = 'avg')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "2FWlK5btLkL3"
      },
      "outputs": [],
      "source": [
        "# Train the base model with fully-connected layers\n",
        "\n",
        "base_vgg16.trainable = True"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 572
        },
        "id": "gbiRNz4yLkOZ",
        "outputId": "5ecb3326-3eae-4d55-e449-7d6faa1b4c7f"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1mModel: \"functional\"\u001b[0m\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"functional\"</span>\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓\n",
              "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)       \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape     \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m   Param #\u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mConnected to     \u001b[0m\u001b[1m \u001b[0m┃\n",
              "┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩\n",
              "│ input_layer_1       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m,  │          \u001b[38;5;34m0\u001b[0m │ -                 │\n",
              "│ (\u001b[38;5;33mInputLayer\u001b[0m)        │ \u001b[38;5;34m3\u001b[0m)                │            │                   │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ vgg16 (\u001b[38;5;33mFunctional\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m512\u001b[0m)       │ \u001b[38;5;34m14,714,688\u001b[0m │ input_layer_1[\u001b[38;5;34m0\u001b[0m]… │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ dense_2 (\u001b[38;5;33mDense\u001b[0m)     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1024\u001b[0m)      │    \u001b[38;5;34m525,312\u001b[0m │ vgg16[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]       │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ dense (\u001b[38;5;33mDense\u001b[0m)       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1024\u001b[0m)      │    \u001b[38;5;34m525,312\u001b[0m │ vgg16[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]       │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ dropout (\u001b[38;5;33mDropout\u001b[0m)   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1024\u001b[0m)      │          \u001b[38;5;34m0\u001b[0m │ dense_2[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]     │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ dense_1 (\u001b[38;5;33mDense\u001b[0m)     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m512\u001b[0m)       │    \u001b[38;5;34m524,800\u001b[0m │ dense[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]       │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ dense_3 (\u001b[38;5;33mDense\u001b[0m)     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m512\u001b[0m)       │    \u001b[38;5;34m524,800\u001b[0m │ dropout[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]     │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ xmin (\u001b[38;5;33mDense\u001b[0m)        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)         │        \u001b[38;5;34m513\u001b[0m │ dense_1[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]     │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ ymin (\u001b[38;5;33mDense\u001b[0m)        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)         │        \u001b[38;5;34m513\u001b[0m │ dense_1[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]     │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ xmax (\u001b[38;5;33mDense\u001b[0m)        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)         │        \u001b[38;5;34m513\u001b[0m │ dense_1[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]     │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ ymax (\u001b[38;5;33mDense\u001b[0m)        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)         │        \u001b[38;5;34m513\u001b[0m │ dense_1[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]     │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ class (\u001b[38;5;33mDense\u001b[0m)       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m10\u001b[0m)        │      \u001b[38;5;34m5,130\u001b[0m │ dense_3[\u001b[38;5;34m0\u001b[0m][\u001b[38;5;34m0\u001b[0m]     │\n",
              "└─────────────────────┴───────────────────┴────────────┴───────────────────┘\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓\n",
              "┃<span style=\"font-weight: bold\"> Layer (type)        </span>┃<span style=\"font-weight: bold\"> Output Shape      </span>┃<span style=\"font-weight: bold\">    Param # </span>┃<span style=\"font-weight: bold\"> Connected to      </span>┃\n",
              "┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩\n",
              "│ input_layer_1       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>,  │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ -                 │\n",
              "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)        │ <span style=\"color: #00af00; text-decoration-color: #00af00\">3</span>)                │            │                   │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ vgg16 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Functional</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)       │ <span style=\"color: #00af00; text-decoration-color: #00af00\">14,714,688</span> │ input_layer_1[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]… │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ dense_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1024</span>)      │    <span style=\"color: #00af00; text-decoration-color: #00af00\">525,312</span> │ vgg16[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]       │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1024</span>)      │    <span style=\"color: #00af00; text-decoration-color: #00af00\">525,312</span> │ vgg16[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]       │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ dropout (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1024</span>)      │          <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │ dense_2[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]     │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)       │    <span style=\"color: #00af00; text-decoration-color: #00af00\">524,800</span> │ dense[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]       │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ dense_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)       │    <span style=\"color: #00af00; text-decoration-color: #00af00\">524,800</span> │ dropout[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]     │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ xmin (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)         │        <span style=\"color: #00af00; text-decoration-color: #00af00\">513</span> │ dense_1[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]     │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ ymin (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)         │        <span style=\"color: #00af00; text-decoration-color: #00af00\">513</span> │ dense_1[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]     │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ xmax (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)         │        <span style=\"color: #00af00; text-decoration-color: #00af00\">513</span> │ dense_1[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]     │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ ymax (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)         │        <span style=\"color: #00af00; text-decoration-color: #00af00\">513</span> │ dense_1[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]     │\n",
              "├─────────────────────┼───────────────────┼────────────┼───────────────────┤\n",
              "│ class (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>)        │      <span style=\"color: #00af00; text-decoration-color: #00af00\">5,130</span> │ dense_3[<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>][<span style=\"color: #00af00; text-decoration-color: #00af00\">0</span>]     │\n",
              "└─────────────────────┴───────────────────┴────────────┴───────────────────┘\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m16,822,094\u001b[0m (64.17 MB)\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">16,822,094</span> (64.17 MB)\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m16,822,094\u001b[0m (64.17 MB)\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">16,822,094</span> (64.17 MB)\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Define the base model with fully-connected layers\n",
        "inputs = keras.Input(shape = (224,224,3))\n",
        "x = base_vgg16(inputs)\n",
        "\n",
        "x1 = keras.layers.Dense(1024, activation = \"relu\")(x)\n",
        "x1 = keras.layers.Dense(512, activation = \"relu\")(x1)\n",
        "out1 = keras.layers.Dense(1, name = \"xmin\")(x1)\n",
        "out2 = keras.layers.Dense(1, name = \"ymin\")(x1)\n",
        "out3 = keras.layers.Dense(1, name = \"xmax\")(x1)\n",
        "out4 = keras.layers.Dense(1, name = \"ymax\")(x1)\n",
        "\n",
        "x2 = keras.layers.Dense(1024,activation = \"relu\")(x)\n",
        "x2 = keras.layers.Dropout(0.5)(x2)\n",
        "x2 = keras.layers.Dense(512,activation = \"relu\")(x2)\n",
        "out_class = keras.layers.Dense(10,activation = \"softmax\", name = \"class\")(x2)\n",
        "\n",
        "out = [out1, out2, out3, out4, out_class]\n",
        "\n",
        "vgg16 = keras.models.Model(inputs = inputs, outputs = out)\n",
        "vgg16.summary()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "RJbIRCF8LkQa"
      },
      "outputs": [],
      "source": [
        "# Compile the model with optimizer and loss functions\n",
        "\n",
        "vgg16.compile(keras.optimizers.Adam(0.0005),\n",
        "              loss = {\"xmin\": \"mse\",\n",
        "                      \"ymin\": \"mse\",\n",
        "                      \"xmax\": \"mse\",\n",
        "                      \"ymax\": \"mse\",\n",
        "                      \"class\": \"categorical_crossentropy\"},\n",
        "                            metrics = {\"xmin\": \"mae\",\n",
        "                         \"ymin\": \"mae\",\n",
        "                         \"xmax\": \"mae\",\n",
        "                         \"ymax\": \"mae\",\n",
        "                         \"class\": \"acc\"})"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Fa7EOb00N95U"
      },
      "outputs": [],
      "source": [
        "# Reduce learning rate\n",
        "\n",
        "lr_reduce = keras.callbacks.ReduceLROnPlateau(\"val_loss\", patience = 5, factor = 0.5, min_lr = 1e-6)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "aM0lD-4cOiSI"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-4dBj7q7LkW7",
        "outputId": "26668da9-47f5-49e5-ad39-1ce084e84249"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/10\n",
            "\u001b[1m57/57\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3741s\u001b[0m 63s/step - class_acc: 0.2209 - class_loss: 2.1876 - loss: 3.0244 - xmax_loss: 0.3299 - xmax_mae: 0.3827 - xmin_loss: 0.2292 - xmin_mae: 0.3560 - ymax_loss: 0.1864 - ymax_mae: 0.3414 - ymin_loss: 0.0913 - ymin_mae: 0.2488 - val_class_acc: 0.3750 - val_class_loss: 1.9201 - val_loss: 2.2446 - val_xmax_loss: 0.0822 - val_xmax_mae: 0.2469 - val_xmin_loss: 0.0676 - val_xmin_mae: 0.2149 - val_ymax_loss: 0.0913 - val_ymax_mae: 0.2747 - val_ymin_loss: 0.0836 - val_ymin_mae: 0.2622 - learning_rate: 5.0000e-04\n",
            "Epoch 2/10\n",
            "\u001b[1m57/57\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3623s\u001b[0m 64s/step - class_acc: 0.2419 - class_loss: 2.1136 - loss: 2.4723 - xmax_loss: 0.0985 - xmax_mae: 0.2717 - xmin_loss: 0.0875 - xmin_mae: 0.2534 - ymax_loss: 0.0931 - ymax_mae: 0.2664 - ymin_loss: 0.0797 - ymin_mae: 0.2448 - val_class_acc: 0.3460 - val_class_loss: 1.9934 - val_loss: 2.2903 - val_xmax_loss: 0.0675 - val_xmax_mae: 0.2054 - val_xmin_loss: 0.0630 - val_xmin_mae: 0.2006 - val_ymax_loss: 0.0855 - val_ymax_mae: 0.2612 - val_ymin_loss: 0.0808 - val_ymin_mae: 0.2326 - learning_rate: 5.0000e-04\n",
            "Epoch 3/10\n",
            "\u001b[1m57/57\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3568s\u001b[0m 63s/step - class_acc: 0.2846 - class_loss: 2.0758 - loss: 2.4260 - xmax_loss: 0.0940 - xmax_mae: 0.2574 - xmin_loss: 0.0795 - xmin_mae: 0.2331 - ymax_loss: 0.0966 - ymax_mae: 0.2679 - ymin_loss: 0.0801 - ymin_mae: 0.2393 - val_class_acc: 0.3594 - val_class_loss: 2.1120 - val_loss: 2.4476 - val_xmax_loss: 0.0914 - val_xmax_mae: 0.2626 - val_xmin_loss: 0.0618 - val_xmin_mae: 0.2040 - val_ymax_loss: 0.0972 - val_ymax_mae: 0.2847 - val_ymin_loss: 0.0853 - val_ymin_mae: 0.2473 - learning_rate: 5.0000e-04\n",
            "Epoch 4/10\n",
            "\u001b[1m57/57\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3620s\u001b[0m 64s/step - class_acc: 0.3614 - class_loss: 1.9723 - loss: 2.3149 - xmax_loss: 0.0839 - xmax_mae: 0.2427 - xmin_loss: 0.0838 - xmin_mae: 0.2364 - ymax_loss: 0.0959 - ymax_mae: 0.2589 - ymin_loss: 0.0791 - ymin_mae: 0.2295 - val_class_acc: 0.3438 - val_class_loss: 1.9433 - val_loss: 2.2520 - val_xmax_loss: 0.0838 - val_xmax_mae: 0.2298 - val_xmin_loss: 0.0615 - val_xmin_mae: 0.1977 - val_ymax_loss: 0.0770 - val_ymax_mae: 0.2166 - val_ymin_loss: 0.0864 - val_ymin_mae: 0.2673 - learning_rate: 5.0000e-04\n",
            "Epoch 5/10\n",
            "\u001b[1m57/57\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3564s\u001b[0m 63s/step - class_acc: 0.2750 - class_loss: 2.0994 - loss: 2.4475 - xmax_loss: 0.0835 - xmax_mae: 0.2437 - xmin_loss: 0.0979 - xmin_mae: 0.2688 - ymax_loss: 0.0915 - ymax_mae: 0.2573 - ymin_loss: 0.0751 - ymin_mae: 0.2302 - val_class_acc: 0.3594 - val_class_loss: 1.8830 - val_loss: 2.2086 - val_xmax_loss: 0.0902 - val_xmax_mae: 0.2576 - val_xmin_loss: 0.0712 - val_xmin_mae: 0.2171 - val_ymax_loss: 0.0842 - val_ymax_mae: 0.2619 - val_ymin_loss: 0.0801 - val_ymin_mae: 0.2563 - learning_rate: 5.0000e-04\n",
            "Epoch 6/10\n",
            "\u001b[1m57/57\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3580s\u001b[0m 63s/step - class_acc: 0.2654 - class_loss: 2.1102 - loss: 2.4470 - xmax_loss: 0.0863 - xmax_mae: 0.2514 - xmin_loss: 0.0953 - xmin_mae: 0.2623 - ymax_loss: 0.0845 - ymax_mae: 0.2533 - ymin_loss: 0.0706 - ymin_mae: 0.2278 - val_class_acc: 0.3571 - val_class_loss: 1.9908 - val_loss: 2.3678 - val_xmax_loss: 0.1017 - val_xmax_mae: 0.2734 - val_xmin_loss: 0.0660 - val_xmin_mae: 0.2087 - val_ymax_loss: 0.1245 - val_ymax_mae: 0.3240 - val_ymin_loss: 0.0847 - val_ymin_mae: 0.2383 - learning_rate: 5.0000e-04\n",
            "Epoch 7/10\n",
            "\u001b[1m57/57\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3557s\u001b[0m 62s/step - class_acc: 0.2397 - class_loss: 2.1192 - loss: 2.4868 - xmax_loss: 0.0988 - xmax_mae: 0.2721 - xmin_loss: 0.0900 - xmin_mae: 0.2564 - ymax_loss: 0.0947 - ymax_mae: 0.2641 - ymin_loss: 0.0841 - ymin_mae: 0.2495 - val_class_acc: 0.3549 - val_class_loss: 1.8576 - val_loss: 2.1769 - val_xmax_loss: 0.0860 - val_xmax_mae: 0.2358 - val_xmin_loss: 0.0611 - val_xmin_mae: 0.1922 - val_ymax_loss: 0.0793 - val_ymax_mae: 0.2478 - val_ymin_loss: 0.0928 - val_ymin_mae: 0.2368 - learning_rate: 5.0000e-04\n",
            "Epoch 8/10\n",
            "\u001b[1m57/57\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3560s\u001b[0m 62s/step - class_acc: 0.2761 - class_loss: 2.0391 - loss: 2.3839 - xmax_loss: 0.1008 - xmax_mae: 0.2722 - xmin_loss: 0.0820 - xmin_mae: 0.2391 - ymax_loss: 0.0808 - ymax_mae: 0.2454 - ymin_loss: 0.0812 - ymin_mae: 0.2357 - val_class_acc: 0.3504 - val_class_loss: 1.7240 - val_loss: 2.2018 - val_xmax_loss: 0.1815 - val_xmax_mae: 0.3810 - val_xmin_loss: 0.0779 - val_xmin_mae: 0.2445 - val_ymax_loss: 0.1302 - val_ymax_mae: 0.2940 - val_ymin_loss: 0.0883 - val_ymin_mae: 0.2647 - learning_rate: 5.0000e-04\n",
            "Epoch 9/10\n",
            "\u001b[1m57/57\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3562s\u001b[0m 63s/step - class_acc: 0.3551 - class_loss: 1.8948 - loss: 2.2061 - xmax_loss: 0.0829 - xmax_mae: 0.2467 - xmin_loss: 0.0752 - xmin_mae: 0.2239 - ymax_loss: 0.0771 - ymax_mae: 0.2315 - ymin_loss: 0.0760 - ymin_mae: 0.2293 - val_class_acc: 0.3393 - val_class_loss: 1.7799 - val_loss: 2.0756 - val_xmax_loss: 0.0687 - val_xmax_mae: 0.2126 - val_xmin_loss: 0.0607 - val_xmin_mae: 0.1995 - val_ymax_loss: 0.0802 - val_ymax_mae: 0.2238 - val_ymin_loss: 0.0861 - val_ymin_mae: 0.2627 - learning_rate: 5.0000e-04\n",
            "Epoch 10/10\n",
            "\u001b[1m57/57\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3564s\u001b[0m 63s/step - class_acc: 0.2736 - class_loss: 2.0517 - loss: 2.3859 - xmax_loss: 0.0888 - xmax_mae: 0.2541 - xmin_loss: 0.0930 - xmin_mae: 0.2582 - ymax_loss: 0.0824 - ymax_mae: 0.2456 - ymin_loss: 0.0699 - ymin_mae: 0.2219 - val_class_acc: 0.2612 - val_class_loss: 1.7250 - val_loss: 2.0622 - val_xmax_loss: 0.1114 - val_xmax_mae: 0.2901 - val_xmin_loss: 0.0761 - val_xmin_mae: 0.2207 - val_ymax_loss: 0.0787 - val_ymax_mae: 0.2424 - val_ymin_loss: 0.0711 - val_ymin_mae: 0.2312 - learning_rate: 5.0000e-04\n"
          ]
        }
      ],
      "source": [
        "# Start training the model\n",
        "\n",
        "history = vgg16.fit(train_dataset,\n",
        "                    steps_per_epoch = train_count//batch_size,\n",
        "                    epochs = 10,\n",
        "                    validation_data = test_dataset,\n",
        "                    validation_steps = test_count//batch_size,\n",
        "                    callbacks = [lr_reduce])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Bmj1mYkRLkZs",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "001e2e30-1899-4be1-acdb-f27cb8509182"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Visualize the results after training\n",
        "\n",
        "def plot_history(history):\n",
        "    hist = pd.DataFrame(history.history)\n",
        "    hist[\"epoch\"] = history.epoch\n",
        "\n",
        "    plt.figure()\n",
        "    plt.xlabel(\"Epoch\")\n",
        "    plt.ylabel(\"Mean Squared Error (MSE)\")\n",
        "    plt.plot(hist[\"epoch\"], hist[\"loss\"], label = \"training Loss\")\n",
        "    plt.plot(hist[\"epoch\"], hist[\"val_loss\"], label = \"validation Loss\")\n",
        "    plt.legend()\n",
        "\n",
        "    plt.figure()\n",
        "    plt.xlabel(\"Epoch\")\n",
        "    plt.ylabel(\"Validation Mean Absolute Error (MAE)\")\n",
        "    plt.plot(hist[\"epoch\"], hist[\"val_xmin_mae\"], label = \"xmin_MAE\")\n",
        "    plt.plot(hist[\"epoch\"], hist[\"val_ymin_mae\"], label = \"ymin_MAE\")\n",
        "    plt.plot(hist[\"epoch\"], hist[\"val_xmax_mae\"], label = \"xmax_MAE\")\n",
        "    plt.plot(hist[\"epoch\"], hist[\"val_ymax_mae\"], label = \"ymax_MAE\")\n",
        "    plt.legend()\n",
        "\n",
        "    plt.figure()\n",
        "    plt.xlabel(\"Epoch\")\n",
        "    plt.ylabel(\"Validation Accuracy for Class\")\n",
        "    plt.plot(hist[\"epoch\"],hist[\"val_class_acc\"], label = \"class_accuracy\")\n",
        "\n",
        "    plt.show()\n",
        "\n",
        "plot_history(history)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Ua9HCgzrLf3S",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ac21d97f-e128-4adf-9f78-1258abdac567"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1m456/456\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7687s\u001b[0m 17s/step - class_acc: 0.2344 - class_loss: 1.9292 - loss: 2.2812 - xmax_loss: 0.1099 - xmax_mae: 0.2883 - xmin_loss: 0.0903 - xmin_mae: 0.2428 - ymax_loss: 0.0808 - ymax_mae: 0.2485 - ymin_loss: 0.0709 - ymin_mae: 0.2320\n"
          ]
        }
      ],
      "source": [
        "results = vgg16.evaluate(test_dataset)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "xTnh86XtKizp",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        },
        "outputId": "906e1845-d16e-4de6-9ec3-cc04607fdf59"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MAE of xmin value in test set:0.23499177396297455\n",
            "MAE of ymin value in test set:0.24672925472259521\n",
            "MAE of xmax value in test set:0.23203051090240479\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "IndexError",
          "evalue": "list index out of range",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m/tmp/ipython-input-46-3921083889.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"MAE of ymin value in test set:{}\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresults\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m8\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"MAE of xmax value in test set:{}\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresults\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"MAE of ymax value in test set:{}\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresults\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m12\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Testing accuracy of predicted label:{}\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresults\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m15\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mIndexError\u001b[0m: list index out of range"
          ]
        }
      ],
      "source": [
        "print(\"MAE of xmin value in test set:{}\".format(results[6]))\n",
        "print(\"MAE of ymin value in test set:{}\".format(results[8]))\n",
        "print(\"MAE of xmax value in test set:{}\".format(results[10]))\n",
        "print(\"MAE of ymax value in test set:{}\".format(results[12]))\n",
        "print(\"Testing accuracy of predicted label:{}\".format(results[15]))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ltj9Sc6BKi1Z",
        "outputId": "3c59c9a1-9669-4c24-a5e8-a6a8c11a2d6d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"
          ]
        }
      ],
      "source": [
        "vgg16.save(\"vgg16.h5\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "-2lGtL8AM9si"
      },
      "outputs": [],
      "source": [
        "plt.figure(figsize = (10, 24))\n",
        "for img, _ in test_dataset.take(1):\n",
        "    out1, out2, out3, out4, label = vgg16.predict(img)\n",
        "    for i in range(3):\n",
        "        plt.subplot(3, 1, i + 1)\n",
        "        plt.imshow(keras.preprocessing.image.array_to_img(img[i]))\n",
        "        pred_imglist = []\n",
        "        pred_imglist.append(class_dict[np.argmax(out5[i]) + 1])\n",
        "        plt.title(pred_imglist)\n",
        "        xmin, ymin, xmax, ymax = out1[i]*224, out2[i]*224, out3[i]*224, out4[i]*224\n",
        "        rect = Rectangle((xmin,ymin), (xmax - xmin), (ymax - ymin), fill = False, color = \"r\")\n",
        "        ax = plt.gca()\n",
        "        ax.axes.add_patch(rect)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Raiz7cdcM9vb"
      },
      "outputs": [],
      "source": [
        "true_labels = []\n",
        "\n",
        "for _, label in test_dataset:\n",
        "    out1, out2, out3, out4, out5 = label\n",
        "    true_labels.append(class_dict[np.argmax(out5) + 1])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "8i4dHl3yM9yS"
      },
      "outputs": [],
      "source": [
        "true_labels"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ACW68aaLB7Hl"
      },
      "outputs": [],
      "source": [
        "target_names = ['cresent_gap', 'crease', 'silk_spot', 'water_spot', 'welding_line',\n",
        "                'inclusion', 'oil_spot', 'waist_folding', 'rolled_pit', 'punching_hole']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "W0qVrI6SB7Kv"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "0idYsYo5M903"
      },
      "outputs": [],
      "source": [
        "from sklearn.metrics import classification_report\n",
        "\n",
        "print(classification_report(true_labels, test_labels, target_names = target_names))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "D4U8vUlkNE_V"
      },
      "outputs": [],
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "\n",
        "confusion_matrix(true_labels, test_labels, labels = target_names)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "M1kopYxQNFCQ"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "T4wONq9-NFFG"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "G_2qttR1M931"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "taFkH8-fKi30"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNjCu7Zx383GAB8yiCyEKxB",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}